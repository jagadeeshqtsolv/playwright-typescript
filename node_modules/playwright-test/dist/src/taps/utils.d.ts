/**
 * Clean up stack trace
 *
 * @param {Error} err
 */
export function stack(err: Error): string;
/**
 * Compare two values are subset of each other. Supports compare functions.
 *
 * @param {any} expected
 * @param {any} actual
 * @returns {boolean}
 */
export function compare(expected: any, actual: any): boolean;
/**
 * Format an object for display in an error message.
 *
 * @param {unknown} v
 * @returns
 */
export function formatObj(v: unknown): string;
/**
 * @param {any} string
 * @param {any} regexp
 * @param {string |Error} [message]
 * @param {Function} [fn]
 * @param {string} [fnName]
 */
export function internalMatch(string: any, regexp: any, message?: string | Error | undefined, fn?: Function | undefined, fnName?: string | undefined): void;
export const IS_ENV_WITH_DOM: boolean;
export const IS_NODE: boolean;
export const HAS_PROCESS: boolean;
export function milli(arr: number[]): string;
export function hrtime(now?: [number, number]): () => string;
//# sourceMappingURL=utils.d.ts.map